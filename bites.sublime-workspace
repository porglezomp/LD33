{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Start",
				"StartCoroutine"
			],
			[
				"ac",
				"actionToSources"
			],
			[
				"curr",
				"currentlyPlaying"
			],
			[
				"m",
				"mixName"
			],
			[
				"cur",
				"currentlyPlaying"
			],
			[
				"ad",
				"audioSource"
			],
			[
				"curre",
				"currentlyPlaying"
			],
			[
				"action",
				"actions"
			],
			[
				"acti",
				"actionToSources"
			],
			[
				"super_li",
				"super_link_match"
			],
			[
				"sup",
				"super_link_regex"
			],
			[
				"BA",
				"BATCH_HEIGHT"
			],
			[
				"sc",
				"screen_height"
			],
			[
				"scre",
				"screen_width"
			],
			[
				"next",
				"next_event"
			],
			[
				"Shou",
				"ShouldBreak"
			],
			[
				"Shoul",
				"ShouldQuit"
			],
			[
				"Should",
				"ShouldBreak"
			],
			[
				"Rect",
				"RectGenerator"
			],
			[
				"BATCH_",
				"BATCH_WIDTH"
			],
			[
				"Window",
				"WindowPos"
			],
			[
				"lam",
				"lambda〔keyword〕"
			],
			[
				"pars",
				"parse_parenthesis"
			],
			[
				"iden",
				"identifier_string"
			],
			[
				"Code",
				"Codegen"
			],
			[
				"Reassign",
				"ReassignAST"
			],
			[
				"Reassi",
				"ReassignAST"
			],
			[
				"prin",
				"printi64"
			],
			[
				"pri",
				"printi64"
			],
			[
				"get",
				"getGlobalContext"
			],
			[
				"Type",
				"Type::getInt64Ty"
			],
			[
				"merge",
				"mergebb"
			],
			[
				"Cre",
				"CreateBr"
			],
			[
				"else",
				"elsebody"
			],
			[
				"Setn",
				"SetInsertPoint"
			],
			[
				"get_",
				"get_char"
			],
			[
				"nex",
				"next_char"
			],
			[
				"els",
				"elsebody"
			],
			[
				"tokDe",
				"tokDedent"
			],
			[
				"Return",
				"ReturnAST"
			],
			[
				"advance",
				"advance_line"
			],
			[
				"Sta",
				"StatementAST"
			],
			[
				"inde",
				"indentation"
			],
			[
				"line_",
				"line_number"
			],
			[
				"str",
				"struct	struct"
			],
			[
				"CreateR",
				"CreateRet"
			],
			[
				"CreateRe",
				"CreateRetVoid"
			],
			[
				"Assi",
				"AssignmentAST"
			],
			[
				"Re",
				"ReturnAST"
			],
			[
				"As",
				"AssignmentAST"
			],
			[
				"proto",
				"Prototypes"
			],
			[
				"gro",
				"groundAngle"
			],
			[
				"Si",
				"Sin(float f)	float"
			],
			[
				"Pro",
				"Project(Vector3 vector, Vector3 onNormal)	Vector3"
			],
			[
				"Phys",
				"Physics"
			],
			[
				"Swp",
				"SweepTest(Vector3 direction, out RaycastHit hitInfo)	bool"
			],
			[
				"GetBu",
				"GetButton(string buttonName)	bool"
			],
			[
				"vel",
				"velocity"
			],
			[
				"ve",
				"velocity"
			],
			[
				"Raycas",
				"RaycastHit	RaycastHit"
			],
			[
				"Sw",
				"SweepTest(Vector3 direction, out RaycastHit hitInfo, float distance)	bool"
			],
			[
				"fixed",
				"fixedDeltaTime	float { get; set; }"
			],
			[
				"walk",
				"walkGoal"
			],
			[
				"max",
				"maxRunSpeed"
			],
			[
				"he",
				"heightVel"
			],
			[
				"wa",
				"walkVelocity"
			],
			[
				"Vec",
				"Vector3"
			],
			[
				"tar",
				"targetHeight	float"
			],
			[
				"Smo",
				"SmoothDamp(float current, float target, ref float currentVelocity, float smoothTime)	float"
			],
			[
				"Sm",
				"SmoothDamp(float current, float target, ref float currentVelocity, float smoothTime)	float"
			],
			[
				"Add",
				"AddForce"
			],
			[
				"de",
				"deltaTime"
			],
			[
				"Exception",
				"UnityException(string message)	UnityException(string message)"
			],
			[
				"GetTrigger",
				"GetTrigger(int trigger)	float"
			],
			[
				"GetCo",
				"GetComponent<T>()	T"
			],
			[
				"vec",
				"Vector3	Vector3"
			],
			[
				"GetR",
				"GetRT()	float"
			],
			[
				"t",
				"transform	Transform { get; }"
			],
			[
				"f",
				"frame"
			],
			[
				"fi",
				"FindChild(string name)	Transform"
			],
			[
				"Fi",
				"FindChild(string name)	Transform"
			],
			[
				"Ge",
				"GetAxis(string axisName)	float"
			],
			[
				"GetA",
				"GetJoystickNames()	string[]"
			],
			[
				"last",
				"last_profile_update"
			],
			[
				"ye",
				"yesterday_karma"
			],
			[
				"karma",
				"karma"
			],
			[
				"karm",
				"karma"
			],
			[
				"entr",
				"entries"
			],
			[
				"The",
				"TheModule"
			],
			[
				"Prot",
				"PrototypeAST"
			],
			[
				"Call",
				"CallAST"
			],
			[
				"code",
				"codegen"
			],
			[
				"Var",
				"VariableAST"
			],
			[
				"Pars",
				"Parser"
			],
			[
				"get_i",
				"get_indentation"
			],
			[
				"fu",
				"function_name"
			],
			[
				"F",
				"FunctionAST"
			],
			[
				"get_o",
				"get_token_precedence"
			],
			[
				"get_tok",
				"get_token_precedence"
			],
			[
				"id",
				"identifier_name"
			],
			[
				"get_n",
				"get_next_token"
			],
			[
				"num",
				"number_string"
			],
			[
				"number",
				"number_value"
			],
			[
				"L",
				"LENS_PARSER_H_"
			],
			[
				"Struct",
				"StructElement"
			],
			[
				"Number",
				"NumberAST"
			],
			[
				"llvm",
				"llvm-config-3"
			],
			[
				"Iden",
				"IdentAST"
			],
			[
				"nu",
				"number_string"
			],
			[
				"ne",
				"next_char"
			],
			[
				"toke",
				"tokenizer"
			],
			[
				"ind",
				"indentation"
			],
			[
				"tok",
				"tokenizer"
			],
			[
				"to",
				"tokenizer"
			],
			[
				"out",
				"out_name"
			],
			[
				"temp_file",
				"temp_file"
			],
			[
				"fil",
				"file_name"
			],
			[
				"main",
				"mainloop"
			],
			[
				"hand",
				"handle_top_level_expression"
			],
			[
				"getNe",
				"get_next_token"
			],
			[
				"pto",
				"prototype"
			],
			[
				"prot",
				"prototype"
			],
			[
				"Parse_pr",
				"parse_prototype"
			],
			[
				"ar",
				"arg_names"
			],
			[
				"Fu",
				"function_name"
			],
			[
				"pu",
				"push_back"
			],
			[
				"func",
				"function"
			],
			[
				"Err",
				"ErrorP"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 400.0,
		"last_filter": "inst",
		"selected_items":
		[
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"omnisharp",
				"OmniSharpSublime: Show Server Output"
			],
			[
				"omni",
				"OmniSharpSublime: Reload Solution"
			],
			[
				"sspy",
				"Set Syntax: Python"
			],
			[
				"run",
				"SublimeREPL: Python - RUN current file"
			],
			[
				"ry",
				"SublimeREPL: Ruby"
			],
			[
				"runn",
				"SublimeREPL: Python - RUN current file"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"replpy",
				"SublimeREPL: Python"
			],
			[
				"reppy",
				"SublimeREPL: Python"
			],
			[
				"repl py",
				"SublimeREPL: Python"
			],
			[
				"git com",
				"Git: Commit"
			],
			[
				"git ad",
				"Git: Add Current File"
			],
			[
				"lintdis",
				"SublimeLinter: Disable Linter"
			],
			[
				"linter",
				"Preferences: SublimeLinter Settings – User"
			],
			[
				"linters",
				"SublimeLinter: Choose Lint Mode"
			],
			[
				"ssru",
				"Set Syntax: Rust"
			],
			[
				"ru",
				"SublimeREPL: Python - RUN current file"
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"git comm",
				"Git: Commit"
			],
			[
				"git add",
				"Git: Add..."
			],
			[
				"git statu",
				"Git: Status"
			],
			[
				"git status",
				"Git: Status"
			],
			[
				"git pus",
				"Git: Push"
			],
			[
				"ssllvm",
				"Set Syntax: LLVM"
			],
			[
				"ssllv",
				"Set Syntax: LLVM"
			],
			[
				"git di",
				"Git: Diff Staged Files"
			],
			[
				"git log",
				"Git: Log All"
			],
			[
				"git diff",
				"Git: Diff Staged Files"
			],
			[
				"git stat",
				"Git: Status"
			],
			[
				"Snippet: copy",
				"Snippet: copyright-c"
			],
			[
				"view",
				"File: New View into File"
			],
			[
				"upcase",
				"Convert Case: Upper Case"
			],
			[
				"ren",
				"ANF: Rename File"
			],
			[
				"renam",
				"ANF: Rename File"
			],
			[
				"rena",
				"ANF: Rename File"
			],
			[
				"goto",
				"OmniSharpSublime: Go to implementation"
			],
			[
				"disa",
				"Package Control: Disable Package"
			],
			[
				"ssC#",
				"Set Syntax: C#"
			],
			[
				"ssc#",
				"Set Syntax: Unity C#"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"whitesp",
				"Whitespace: Remove Trailing Whitespace"
			],
			[
				"white",
				"Whitespace: Remove Trailing Whitespace"
			],
			[
				"packa",
				"Package Control: List Packages"
			],
			[
				"pyt",
				"Set Syntax: Python"
			],
			[
				"C",
				"Set Syntax: C++"
			],
			[
				"git add ",
				"Git: Add..."
			],
			[
				"sshask",
				"Set Syntax: Haskell"
			],
			[
				"dele",
				"Trailing Spaces: Delete Trailing Spaces"
			],
			[
				"traili",
				"Trailing Spaces: Delete Trailing Spaces"
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"c++",
				"Set Syntax: C++"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"delete",
				"Trailing Spaces: Delete Trailing Spaces"
			],
			[
				"delete tra",
				"Trailing Spaces: Delete Trailing Spaces"
			],
			[
				"lint",
				"SublimeLinter: Show All Errors"
			],
			[
				"gitig",
				"Gitignore: New gitignore"
			],
			[
				"isnta",
				"Colorsublime: Install Theme"
			],
			[
				"ss C++",
				"Set Syntax: C++"
			],
			[
				"ss Ci",
				"Set Syntax: C Improved"
			],
			[
				"debu",
				"SublimeLinter: Disable Debug Mode"
			],
			[
				"lin",
				"SublimeLinter: Lint This View"
			],
			[
				"enabl",
				"SublimeLinter: Enable Linter"
			],
			[
				"enable lin",
				"SublimeLinter: Disable Linter"
			],
			[
				"ssc++",
				"Set Syntax: C++"
			],
			[
				"enable ",
				"SublimeLinter: Enable Linting"
			],
			[
				"ssmd",
				"Set Syntax: Markdown"
			],
			[
				"mit",
				"Licence Snippet: MIT"
			],
			[
				"licmi",
				"Licence Snippet: MIT"
			],
			[
				"git co",
				"Git: Commit"
			],
			[
				"gitin",
				"Gitignore: New gitignore"
			],
			[
				"giti",
				"Gitignore: New gitignore"
			],
			[
				"ssr",
				"Set Syntax: Rust"
			],
			[
				"addre",
				"Package Control: Add Repository"
			],
			[
				"add",
				"Package Control: Add Repository"
			],
			[
				"upg",
				"Package Control: Upgrade Package"
			],
			[
				"ssc",
				"Set Syntax: C Improved"
			],
			[
				"statu",
				"Git: Status"
			],
			[
				"color",
				"Colorsublime: Install Theme"
			],
			[
				"colo",
				"Colorsublime: Install Theme"
			],
			[
				"col",
				"Colorsublime: Install Theme"
			],
			[
				"color sch",
				"SublimeLinter: Clear Color Scheme Folder"
			],
			[
				"lincol",
				"SublimeLinter: Clear Color Scheme Folder"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"set theme",
				"SublimeLinter: Choose Gutter Theme"
			],
			[
				"pakca list",
				"Package Control: List Packages"
			],
			[
				"dislin",
				"SublimeLinter: Disable Linting"
			],
			[
				"enlint",
				"SublimeLinter: Enable Linting"
			],
			[
				"linting",
				"SublimeLinter: Disable Linting"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"next",
				"SublimeLinter: Next Error"
			],
			[
				"disabl",
				"Package Control: Disable Package"
			],
			[
				"lint st",
				"SublimeLinter: Choose Mark Style"
			],
			[
				"it ad",
				"Git: Add Current File"
			],
			[
				"build",
				"Build: Build"
			],
			[
				"bui",
				"Build: Run"
			],
			[
				"gitign",
				"Set Syntax: Git Ignore"
			],
			[
				"pyth",
				"Set Syntax: Python"
			],
			[
				"py",
				"Set Syntax: Python"
			],
			[
				"rust",
				"Set Syntax: Rust"
			],
			[
				"ssrus",
				"Set Syntax: Rust"
			]
		],
		"width": 520.0
	},
	"console":
	{
		"height": 146.0,
		"history":
		[
			"view.scope_name(view.sel()[0].begin()).rpartition('.')[2].strip()",
			"import os",
			"env",
			"env!",
			"os.environ.copy()",
			"import os",
			"os.environ.copy()",
			"env",
			"global env",
			"env",
			"settings.get(\"search_paths\", [])",
			"settings.get(\"asdf\", \"fasd\")",
			"settings.get(\"asdf\", [])",
			"settings.get(\"racer\", [])",
			"settings.get(\"racer\", \"racer\")",
			"settings = sublime.load_settings(\"RustAutoComplete.sublime-settings\")",
			"sublime.load_settings(\"RustAutoComplete.sublime-settings\")",
			"RustAutoComplete.Settings()",
			"RustAutoComplete.settings",
			"RustAutoComplete.plugin_loaded()",
			"from RustAutoComplete import plugin_loaded",
			"RustAutoComplete.plugin_loaded()",
			"settings",
			"RustAutoComplete.settings",
			"RustAutoComplete",
			"import RustAutoComplete",
			"RustAutoComplete",
			"expand_all(\"~\")",
			"env",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/caleb/Development/LD/ld33",
		"/Users/caleb/Development/LD/ld33/Bites",
		"/Users/caleb/Development/LD/ld33/Bites/Assets"
	],
	"file_history":
	[],
	"find":
	{
		"height": 26.0
	},
	"find_in_files":
	{
		"height": 100.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"0f",
			"f",
			"\n\n",
			"\n",
			"i",
			"I",
			"i",
			"volume",
			"\"\n",
			"\"",
			"(",
			"UnkownType",
			"createAlloca",
			"args",
			"type",
			"i64",
			"f64",
			"i64",
			"f64",
			"expr_codegen",
			"codegen",
			"char",
			"read",
			"basic_",
			"ifstream",
			"read",
			"get",
			"size(",
			"end",
			"operatr",
			"basic_streambuf",
			"read",
			"read(",
			"next",
			"get",
			"read",
			"ifstream",
			"NamedValues",
			"Create",
			"NumberAST",
			"SweepTestAll",
			"Input.GetAxis(\"Horizontal\")",
			"Tunnel",
			"already_done",
			"tokenizer",
			"call",
			"function",
			"([A-Z]{3,}\\s)+",
			"([A-Z]{5,}\\s)+",
			"9",
			"static",
			"_next_token",
			"impl Iterator",
			"Iterator",
			"iter",
			"\n",
			"Zero",
			"\n",
			"Zero",
			"\n",
			" ",
			"\n",
			"First"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 104.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 112.0
	},
	"output.variable_get":
	{
		"height": 110.0
	},
	"pinned_build_system": "",
	"project": "bites.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"make",
				"Makefile"
			],
			[
				"",
				"src/scope.cpp"
			],
			[
				"toc",
				"src/tokenizer.cpp"
			],
			[
				"ch",
				"Assets/Scripts/CharacterPhysics.cs"
			],
			[
				"gam",
				"Gamepad.cs"
			],
			[
				"tok",
				"src/tokenizer.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 400.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"$(TARGET):"
			]
		],
		"width": 400.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 245.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
